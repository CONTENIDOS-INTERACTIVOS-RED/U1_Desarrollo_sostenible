{"remainingRequest":"/home/runner/work/U1_Desarrollo_sostenible/U1_Desarrollo_sostenible/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Desarrollo_sostenible/U1_Desarrollo_sostenible/src/views/curso/Tema1.vue?vue&type=template&id=1a9fefe1&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Desarrollo_sostenible/U1_Desarrollo_sostenible/src/views/curso/Tema1.vue","mtime":1742177346039},{"path":"/home/runner/work/U1_Desarrollo_sostenible/U1_Desarrollo_sostenible/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Desarrollo_sostenible/U1_Desarrollo_sostenible/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Desarrollo_sostenible/U1_Desarrollo_sostenible/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Desarrollo_sostenible/U1_Desarrollo_sostenible/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Desarrollo_sostenible/U1_Desarrollo_sostenible/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}